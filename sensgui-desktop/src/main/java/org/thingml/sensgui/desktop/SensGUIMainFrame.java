/**
 * Copyright (C) 2013 SINTEF <franck.fleurey@sintef.no>
 *
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.thingml.sensgui.desktop;

import java.util.ArrayList;
import org.thingml.sensgui.adapters.ChestBeltAdapter;
import org.thingml.sensgui.adapters.DummySensGUIAdapter;
import org.thingml.sensgui.adapters.IsensUAdapter;
import org.thingml.sensgui.adapters.SensGUIAdapter;

/**
 *
 * @author ffl
 */
public class SensGUIMainFrame extends javax.swing.JFrame {

    protected ArrayList<SensorPanel> sensors = new ArrayList<SensorPanel>();
    
    /**
     * Creates new form SensGUIMainFrame
     */
    public SensGUIMainFrame() {
        initComponents();
    }
    
    public void refreshList() {
        jPanelSensorList.removeAll();
        //jPanelSensorList.revalidate();
         for (SensorPanel s : sensors) {
            s.refresh();
            jPanelSensorList.add(s);
        }
        jPanelSensorList.revalidate();
        jPanelSensorList.repaint();
    }
    
    public void removeDisconnected() {
        ArrayList<SensorPanel> disc = new ArrayList<SensorPanel>();
        for (SensorPanel s : sensors) {
            if (!s.getSensor().isConnected()) {
                disc.add(s);
            }
        }
        sensors.removeAll(disc);
        refreshList();
    }
    
    public void disconnectAll() {
        for (SensorPanel s : sensors) {
            s.do_disconnect();
        }
    }
    
    public void addSensor(SensGUIAdapter adapter) {
       adapter.connect();
       if (adapter.isConnected()) {
           SensorPanel panel = new SensorPanel(adapter);
           sensors.add(panel);
           refreshList();
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanelSensorList = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemConnISenseU = new javax.swing.JMenuItem();
        jMenuItemConnChestBelt = new javax.swing.JMenuItem();
        jMenuItemConnectDummy = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemDisconnectAll = new javax.swing.JMenuItem();
        jMenuView = new javax.swing.JMenu();
        jMenuItemRefresh = new javax.swing.JMenuItem();
        jMenuItemRMDisconnected = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelSensorList.setLayout(new javax.swing.BoxLayout(jPanelSensorList, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane2.setViewportView(jPanelSensorList);

        jMenu1.setText("File");

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Connect");

        jMenuItemConnISenseU.setText("Connect ISenseU...");
        jMenuItemConnISenseU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConnISenseUActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemConnISenseU);

        jMenuItemConnChestBelt.setText("Connect ChestBelt...");
        jMenuItemConnChestBelt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConnChestBeltActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemConnChestBelt);

        jMenuItemConnectDummy.setText("Connect Dummy...");
        jMenuItemConnectDummy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConnectDummyActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemConnectDummy);
        jMenu2.add(jSeparator1);

        jMenuItemDisconnectAll.setText("Disconnect All");
        jMenuItemDisconnectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDisconnectAllActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemDisconnectAll);

        jMenuBar1.add(jMenu2);

        jMenuView.setText("View");

        jMenuItemRefresh.setText("Refresh");
        jMenuItemRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRefreshActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuItemRefresh);

        jMenuItemRMDisconnected.setText("Remove Disconnected");
        jMenuItemRMDisconnected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRMDisconnectedActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuItemRMDisconnected);

        jMenuBar1.add(jMenuView);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        disconnectAll();
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemDisconnectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDisconnectAllActionPerformed
        disconnectAll();
    }//GEN-LAST:event_jMenuItemDisconnectAllActionPerformed

    private void jMenuItemConnectDummyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConnectDummyActionPerformed
       DummySensGUIAdapter adapter = new DummySensGUIAdapter();
       addSensor(adapter);
       
    }//GEN-LAST:event_jMenuItemConnectDummyActionPerformed

    private void jMenuItemRMDisconnectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRMDisconnectedActionPerformed
        removeDisconnected();
    }//GEN-LAST:event_jMenuItemRMDisconnectedActionPerformed

    private void jMenuItemConnISenseUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConnISenseUActionPerformed
        addSensor(new IsensUAdapter());
    }//GEN-LAST:event_jMenuItemConnISenseUActionPerformed

    private void jMenuItemConnChestBeltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConnChestBeltActionPerformed
        addSensor(new ChestBeltAdapter());
    }//GEN-LAST:event_jMenuItemConnChestBeltActionPerformed

    private void jMenuItemRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRefreshActionPerformed
        refreshList();
    }//GEN-LAST:event_jMenuItemRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SensGUIMainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemConnChestBelt;
    private javax.swing.JMenuItem jMenuItemConnISenseU;
    private javax.swing.JMenuItem jMenuItemConnectDummy;
    private javax.swing.JMenuItem jMenuItemDisconnectAll;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemRMDisconnected;
    private javax.swing.JMenuItem jMenuItemRefresh;
    private javax.swing.JMenu jMenuView;
    private javax.swing.JPanel jPanelSensorList;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
